#!/bin/bash

readonly IMAGE="progrium/consul"
readonly NAME="smesh"
readonly DATADIR="/var/lib/smesh/consul"

cmd-ip() {
	local interface="$1";
	if [ -z $interface ]; then
		interface="eth0"
	fi
	ip=$(ifconfig $interface | awk -F ' *|:' '/inet addr/{print $4}')
	echo $ip
}

cmd-bridgeip() {
	local bridgeip="$(ip ro | grep docker | awk '{print $9}')"
	echo $bridgeip
}

consul-config() {
	local external_ip=$(cmd-ip $1)
	local bridge_ip=$(cmd-bridgeip)
	cat <<EOF
eval docker run --name $NAME -h $HOSTNAME -v $DATADIR:/data \
	-p $external_ip:8300:8300 \
	-p $external_ip:8301:8301 \
	-p $external_ip:8301:8301/udp \
	-p $external_ip:8302:8302 \
	-p $external_ip:8302:8302/udp \
	-p $external_ip:8400:8400 \
	-p $external_ip:8500:8500 \
	-p $bridge_ip:53:53/udp \
	-d \
	$IMAGE -advertise $external_ip
EOF
}

cmd-bootstrap() {
	local interface="$1"; shift
	local consul=$(consul-config $interface);
	local args="$@"
	local cmd="$consul -bootstrap -server $args"
	echo $cmd
	$cmd
}

cmd-join() {
	local interface="$1"; shift
	local join_ip="$2"; shift
	local consul=$(consul-config $interface);
	local args="$@"
	local cmd="$consul -join $join_ip -server $args"
	echo $cmd
	$($cmd)
}

cmd-client() {
	local interface="$1"; shift
	local join_ip="$2"; shift
	local consul=$(consul-config $interface);
	local args="$@"
	local cmd="$consul -join $join_ip $args"
	echo $cmd
	$($cmd)
}

cmd-dockeropts() {
	local bridge_ip=$(cmd-bridgeip)
	echo "DOCKER_OPTS='--dns $bridge_ip --dns 8.8.8.8 --dns-search service.consul'" > /etc/default/docker
	service docker restart
	sleep 2
}

cmd-dockerimages() {
	docker pull $IMAGE
}

cmd-help() {
	echo
    cat<<EOF
    help                        Print the list of commands
    ip [interface]              Print the IP address for a given interface
    bootstrap [interface]       Start a new cluster
    join [interface] [joinip]   Join an existing cluster
    dockeropts [interface]      Update docker to run with the consul DNS and HTTP api
EOF
	echo
}

main() {
	case "$1" in
	ip)			  					shift; cmd-ip "$@";;
	bootstrap)					shift; cmd-bootstrap "$@";;
	join)								shift; cmd-join "$@";;
	dockeropts)					shift; cmd-dockeropts "$@";;
	dockerimages)				shift; cmd-dockerimages "$@";;
	*)                  cmd-help "$@";;
	esac
}

main "$@"