#!/bin/bash

readonly IMAGE="binocarlos/smesh"
readonly NAME="smesh"
readonly DATADIR="/var/lib/smesh/consul"
readonly INTERFACEFILE="$HOME/.smeshinterface"

cmd-interface() {
	local interface="$1";
	if [ ! -z $interface ]; then
		echo $interface > $INTERFACEFILE
	else
		if [ -f $INTERFACEFILE ]; then
			interface=$(cat $INTERFACEFILE)
		fi
		if [ -z $interface ]; then
			interface="eth0"
		fi
	fi
	echo $interface
}

cmd-ip() {
	local interface=$(cmd-interface)
	ip=$(ifconfig $interface | awk -F ' *|:' '/inet addr/{print $4}')
	echo $ip
}

cmd-bridgeip() {
	local bridgeip="$(ip ro | grep docker | awk '{print $9}')"
	echo $bridgeip
}

consul-config() {
	local interface_ip=$(cmd-ip)
	local bridge_ip=$(cmd-bridgeip)
	cat <<EOF
eval docker run -t -d --name $NAME -h $HOSTNAME -v $DATADIR:/data \
	-p $interface_ip:8300:8300 \
	-p $interface_ip:8301:8301 \
	-p $interface_ip:8301:8301/udp \
	-p $interface_ip:8302:8302 \
	-p $interface_ip:8302:8302/udp \
	-p $interface_ip:8400:8400 \
	-p $interface_ip:8500:8500 \
	-p $bridge_ip:53:53/udp \
	$IMAGE -advertise $interface_ip
EOF
}

cmd-bootstrap() {
	local consul=$(consul-config);
	local args="$@"
	local cmd="$consul -bootstrap -server $args"
	echo $cmd
	$cmd
}

cmd-server() {
	local join_ip="$1"; shift
	local consul=$(consul-config);
	local args="$@"
	local cmd="$consul -join $join_ip -server $args"
	echo $cmd
	$cmd
}

cmd-client() {
	local join_ip="$1"; shift
	local consul=$(consul-config);
	local args="$@"
	local cmd="$consul -join $join_ip $args"
	echo $cmd
	$cmd
}

cmd-stop() {
	docker stop smesh && docker rm smesh
}

cmd-rejoin() {
	cmd-stop
	cmd-server $@
}

cmd-reset() {
	sudo rm -rf $DATADIR
}

cmd-dockeropts() {
	local interface_ip=$(cmd-ip)
	local bridge_ip=$(cmd-bridgeip)
	echo "DOCKER_OPTS='-H unix:///var/run/docker.sock -H tcp://$interface_ip:2375 --dns $bridge_ip --dns 8.8.8.8 --dns-search service.consul'" > /etc/default/docker
	service docker restart
	sleep 2
}

cmd-dockerimages() {
	docker pull $IMAGE
}

cmd-consul() {
	local interface_ip=$(cmd-ip)
	local args="$@"
	docker run --rm -it --entrypoint "/bin/consul" $IMAGE $args -rpc-addr $interface_ip:8400
}

cmd-help() {
	echo
    cat<<EOF
    help                        Print the list of commands
    interface [name]            Set/get the name of the interface smesh will use
    dockeropts                  Update the docker options
    ip [interface]              Print the IP address for a given interface
    bootstrap                   Start a new cluster
    server [joinip]             Join an existing cluster as a server
    client [joinip]             Join an existing cluster as a client
    rejoin [joinip]             Turn a bootstrapped node into a normal server
    consul [args]               Join an existing cluster as a client
    stop                        Stop and remove the docker container
    reset                       Remove the shared data directory
    consul [args]               Run consul
EOF
	echo
}

main() {
	case "$1" in
	interface)				  shift; cmd-interface "$@";;
	ip)			  					shift; cmd-ip "$@";;
	bootstrap)					shift; cmd-bootstrap "$@";;
	server)							shift; cmd-server "$@";;
	client)							shift; cmd-client "$@";;
  rejoin)							shift; cmd-rejoin "$@";;
	consul)							shift; cmd-consul "$@";;
	stop)							  shift; cmd-stop "$@";;
  reset)  					  shift; cmd-reset "$@";;
	dockeropts)					shift; cmd-dockeropts "$@";;
	dockerimages)				shift; cmd-dockerimages "$@";;
	*)                  cmd-help "$@";;
	esac
}

main "$@"